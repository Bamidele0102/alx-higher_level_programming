# Test cases for matrix_mul function

# Valid multiplication
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

# Invalid multiplication (raise ValueError)
>>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5, 6]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty or m_b can't be empty

# Invalid matrices (raise TypeError)
>>> matrix_mul([1, 2, 3], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists or m_b must be a list of lists

>>> matrix_mul([[1, 2], [3, 4]], "invalid_matrix")
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists or m_b must be a list of lists

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, "invalid"]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats or m_b should contain only integers or floats

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, "invalid"]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats or m_b should contain only integers or floats
